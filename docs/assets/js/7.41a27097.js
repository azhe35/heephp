(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{325:function(t,r,a){"use strict";a.r(r);var e=a(33),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"aop-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop-介绍"}},[t._v("#")]),t._v(" AOP 介绍")]),t._v(" "),a("p",[t._v("Aspect Oriented Programming（AOP）是较为热门的一个话题。AOP，国内大致译作“面向切面编程”。")]),t._v(" "),a("p",[t._v("面向过程编程离我们已经有些遥远"),a("br"),t._v("\n面向对象编程正主宰着软件世界。当每个新的软件设计师都被要求掌握如何将需求功能转化成一个个类，并且定义它们的数据成员、行为，以及它们之间复杂的关系的时候"),a("br"),t._v("\n面向切面编程（Aspect-Oriented Programming，AOP）为我们带来了新的想法、新的思想、新的模式。")]),t._v(" "),a("h3",{attrs:{id:"aop-与-oop-面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aop-与-oop-面向对象"}},[t._v("#")]),t._v(" AOP 与 OOP(面向对象)")]),t._v(" "),a("p",[t._v("AOP、OOP 在字面上虽然非常类似，但却是面向不同领域的两种设计思想。")]),t._v(" "),a("p",[t._v("OOP（面向对象编程）针对业务处理过程的实体及其属性和行为进行抽象封装，以获得更加清晰高效的逻辑单元划分。")]),t._v(" "),a("p",[t._v("AOP（面向切面编程）则是针对业务处理过程中的切面进行提取，它所面对的是处理过程中的某个步骤或阶段，以获得逻辑过程中各部分之间低耦合性的隔离效果。")]),t._v(" "),a("p",[t._v("这两种设计思想在目标上有着本质的差异。")])])}),[],!1,null,null,null);r.default=s.exports}}]);